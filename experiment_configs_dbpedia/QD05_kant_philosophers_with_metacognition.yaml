# QA11 â€“ Kant Philosophers (WITH metacognition): "Which philosophers influenced by Kant were also mathematicians?" (DBpedia)
# Without metacognition, the agent performs wide exploration. With metacognition, it detects the high branching factor 
# and suggests focusing on philosopher-mathematician intersection first.

experiment_id: "QD06_kant_philosophers_with_metacognition_dbpedia"

# Knowledge source selection: "wikidata" or "dbpedia"
knowledge_source: "dbpedia"

orchestrator:
  type: "multi_stage"
  context_length: 8000
  model: "gpt-4o"
  memory:
    use_summary_memory: true
    max_memory_slots: 30
  max_turns: 50
  enable_question_decomposition: false
  enable_metacognition: true
  metacognition:
    system_description: >
      An AI-powered ontology exploration framework where a metacognitive LLM agent monitors
      and corrects the execution history of a multi-stage LLM-based orchestrator.
      The metacognitive system provides strategic assessment and meta-observation capabilities
      to improve query processing performance through behavioral analysis
      and strategic suggestions for the primary orchestrator agent.
    
    agent_description: >
      Multi-stage orchestrator with six distinct execution phases:
      (1) LOCAL_GRAPH_EXPLORATION using graph database tools (GetNodeTool, CypherQueryTool, GetEdgeTool) to search the accumulated local knowledge graph,
      (2) EVAL_LOCAL_DATA using evaluation tools to assess local search results,
      (3) REMOTE_GRAPH_EXPLORATION using DBPedia API tools (GetEntityInfoTool, SearchEntitiesTool, SPARQLQueryTool, NeighborsExplorationTool, LocalGraphTool) to fetch data from the DBPedia ontology,
      (4) EVAL_REMOTE_DATA using evaluation tools to assess remote retrieval results,
      (5) LOCAL_GRAPH_UPDATE using graph update tools (FetchNodeTool, FetchRelationshipTool, RemoveNodeTool) to populate the local knowledge graph with validated remote data,
      (6) PRODUCE_ANSWER using evaluation tools to generate final responses with supporting evidence from the accumulated graph.
    
    task_description: >
      Systematically explore the DBPedia ontology
      through strategic tool usage to populate a local knowledge graph
      that can answer natural language queries.
      Each answer must be supported by a comprehensive set of nodes
      and relationships from the accumulated local knowledge graph,
      providing complete provenance and evidence chains
      for every statement in the response.
  
  toolboxes:
    local_exploration: []
    remote_exploration: []
    graph_update: []
    evaluation: []

log_level: "DEBUG"
memory: ""

dataset:
  path: ""
  type: "auto"
  load_on_start: false

queries:
  - "Which philosophers influenced by Kant were also mathematicians?"

output:
  save_results: true
  export_formats: ["json", "cypher"]
  create_visualizations: true
  results_directory: "experiments"
